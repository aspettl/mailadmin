<%= form_with(model: domain) do |form| %>
  <% if domain.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(domain.errors.count, "error") %> prohibited this domain from being saved:</h2>

      <ul>
        <% domain.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :type %>
    <%= form.select :type, Domain.types.keys.map { |t| [t.humanize, t] }, {}, disabled: !domain.new_record? %>
    <% if domain.new_record? %>
      (immutable, cannot be changed after creation)
    <% end %>
  </div>

  <div class="field">
    <%= form.label :domain %>
    <%= form.text_field :domain, disabled: !domain.new_record?, autofocus: domain.new_record? %>
    <% if domain.new_record? %>
      (immutable, cannot be changed after creation)
    <% end %>
  </div>

  <div class="field">
    <%= form.label :enabled %>
    <%= form.check_box :enabled %>
  </div>

  <% if domain.new_record? || domain.local_domain? %>
    <% if domain.new_record? %>
      <p><strong>Only when local domain:</strong></p>
    <% end %>
    <div class="field">
      <%= form.label :catchall %>
      <%= form.check_box :catchall %>
    </div>

    <div class="field">
      <%= form.label :catchall_target %>
      <%= form.text_field :catchall_target %>
    </div>
  <% end %>

  <% if domain.new_record? || domain.alias_domain? %>
    <% if domain.new_record? %>
      <p><strong>Only when alias domain:</strong></p>
    <% end %>
    <div class="field">
      <%= form.label :alias_target %>
      <%= form.text_field :alias_target, disabled: !domain.new_record? && !domain.alias_domain? %>
    </div>
  <% end %>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>
